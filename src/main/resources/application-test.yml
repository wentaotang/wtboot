spring:
    application:
        name: wtboot

    shardingsphere:
        datasource:
            names: ds1
            ds1:
                type: com.zaxxer.hikari.HikariDataSource
                jdbcUrl: jdbc:mysql://127.0.0.1:3306/wtboot?&allowMultiQueries=true&useUnicode=true&characterEncoding=utf8&useSSL=false
                username: root
                password: root
                hikari:
                    data-source-properties:
                        cachePrepStmts: true
                        prepStmtCacheSize: 250
                        prepStmtCacheSqlLimit: 2048
                        useServerPrepStmts: true
        sharding:
            tables:
                orders:
                    actual-data-nodes: ds1.orders_$->{0..7}
                    table-strategy:
                        standard:
                            sharding-column: id
                            #algorithm-expression: ds1.orders_$->{id % 8}
                            precise-algorithm-class-name: com.hgcode.wtboot.web.util.IdShardingAlgorithm
                    key-generator:
                        column: id
                        type: SNOWFLAKE
        props:
            sql:
                show: true

    redis:
        host: 127.0.0.1
        port: 6379

    cloud:
        stream:
            rocketmq:
                binder:
                    name-server: 10.8.131.14:9876;10.8.131.15:9876
            bindings:
                order:
                    destination: order-topic
                    content-type: application/json
                input5:
                    destination: order-topic
                    content-type: application/json
                    group: order-test-group






mybatis-plus:
    mapper-locations: classpath:/config/mapper/*.xml
    global-config:
        db-config:
            id-type: id_worker
            logic-delete-value: -1


logging:
    level:
        com.hgcode.wtboot: debug


input5: input5

